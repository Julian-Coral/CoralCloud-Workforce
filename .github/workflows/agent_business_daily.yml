name: Business Agent - Daily Pipeline Check

on:
  schedule:
    # Monday-Friday at 10 AM UTC (business hours)
    - cron: '0 10 * * 1-5'

  # Allow manual trigger for proposal generation
  workflow_dispatch:
    inputs:
      mode:
        description: 'Mode: pipeline or proposal'
        required: false
        default: 'pipeline'
      opportunity:
        description: 'Opportunity description (for proposal mode)'
        required: false
        default: ''

jobs:
  run-business-agent:
    runs-on: ubuntu-latest
    timeout-minutes: 7

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install anthropic pyyaml

      - name: Run Business Agent
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          python src/agent_runner.py business

      - name: Check for outputs
        id: check_outputs
        run: |
          if [ -d "reports/business" ] && [ "$(ls -A reports/business/*.md 2>/dev/null)" ]; then
            echo "has_outputs=true" >> $GITHUB_OUTPUT
            latest_report=$(ls -t reports/business/*.md | head -1)
            echo "latest_report=$latest_report" >> $GITHUB_OUTPUT

            # Check if it's a pipeline check or proposal
            if [[ "$latest_report" == *"pipeline"* ]]; then
              echo "output_type=pipeline" >> $GITHUB_OUTPUT
            elif [[ "$latest_report" == *"proposal"* ]]; then
              echo "output_type=proposal" >> $GITHUB_OUTPUT
            else
              echo "output_type=other" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_outputs=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push reports
        if: steps.check_outputs.outputs.has_outputs == 'true'
        run: |
          git config --local user.email "ai-agents@coralcloud.tech"
          git config --local user.name "CoralCloud Business Agent"

          git add reports/business/*.md
          git add data/leads.csv || true

          report_date=$(date +%Y-%m-%d)

          if [ "${{ steps.check_outputs.outputs.output_type }}" == "proposal" ]; then
            commit_msg="💼 Proposal Draft Generated - $report_date"
          else
            commit_msg="💼 Daily Pipeline Check - $report_date"
          fi

          git commit -m "$commit_msg

          Generated by Business Agent
          Report: ${{ steps.check_outputs.outputs.latest_report }}

          [skip ci]" || echo "No changes to commit"

          # Pull latest changes and rebase
          git pull --rebase origin main || true

          git push

      - name: Report summary
        if: always()
        run: |
          echo "## 💼 Business Agent Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Agent:** Business Agent (Income)" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_outputs.outputs.has_outputs }}" == "true" ]; then
            echo "**Output Generated:** ✅" >> $GITHUB_STEP_SUMMARY
            echo "**Type:** ${{ steps.check_outputs.outputs.output_type }}" >> $GITHUB_STEP_SUMMARY
            echo "**Latest Report:** \`${{ steps.check_outputs.outputs.latest_report }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "1. Review pipeline priorities" >> $GITHUB_STEP_SUMMARY
            echo "2. Act on high-value opportunities" >> $GITHUB_STEP_SUMMARY
            echo "3. Follow up on proposals" >> $GITHUB_STEP_SUMMARY
            echo "4. Track towards 5 proposals/week KPI" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Output Generated:** ❌" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### KPI Targets" >> $GITHUB_STEP_SUMMARY
          echo "- ≥5 proposals/week" >> $GITHUB_STEP_SUMMARY
          echo "- ≥1 project/month" >> $GITHUB_STEP_SUMMARY
          echo "- 20% conversion rate target" >> $GITHUB_STEP_SUMMARY

name: Retail Intelligence Agent - Biweekly Asset Generation

on:
  schedule:
    # Every other Wednesday at 2 PM UTC
    - cron: '0 14 * * 3'

  # Allow manual trigger with topic specification
  workflow_dispatch:
    inputs:
      mode:
        description: 'Mode: review or asset'
        required: false
        default: 'review'
      topic:
        description: 'Asset topic (for asset mode)'
        required: false
        default: ''
      asset_type:
        description: 'Asset type (Blueprint, Guide, Template, etc.)'
        required: false
        default: 'Implementation Guide'

jobs:
  run-retail-agent:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install anthropic pyyaml

      - name: Run Retail Intelligence Agent
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          python src/agent_runner.py retail

      - name: Check for outputs
        id: check_outputs
        run: |
          if [ -d "reports/retail" ] && [ "$(ls -A reports/retail/*.md 2>/dev/null)" ]; then
            echo "has_outputs=true" >> $GITHUB_OUTPUT
            latest_asset=$(ls -t reports/retail/technical_asset_*.md 2>/dev/null | head -1)
            if [ -n "$latest_asset" ]; then
              echo "latest_asset=$latest_asset" >> $GITHUB_OUTPUT
              echo "output_type=asset" >> $GITHUB_OUTPUT
            else
              latest_report=$(ls -t reports/retail/*.md | head -1)
              echo "latest_asset=$latest_report" >> $GITHUB_OUTPUT
              echo "output_type=review" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_outputs=false" >> $GITHUB_OUTPUT
          fi

      - name: Update asset catalog
        if: steps.check_outputs.outputs.output_type == 'asset'
        run: |
          # This is a placeholder - in production, would parse and update catalog
          echo "Asset catalog update would happen here"

      - name: Commit and push outputs
        if: steps.check_outputs.outputs.has_outputs == 'true'
        run: |
          git config --local user.email "ai-agents@coralcloud.tech"
          git config --local user.name "CoralCloud Retail Intelligence Agent"

          git add reports/retail/*.md
          git add reports/retail/knowledge_base/ || true

          report_date=$(date +%Y-%m-%d)

          if [ "${{ steps.check_outputs.outputs.output_type }}" == "asset" ]; then
            commit_msg="⚙️ New Technical Asset - $report_date"
          else
            commit_msg="⚙️ Retail Intelligence Review - $report_date"
          fi

          git commit -m "$commit_msg

          Generated by Retail Intelligence Agent
          Output: ${{ steps.check_outputs.outputs.latest_asset }}

          [skip ci]" || echo "No changes to commit"

          git push

      - name: Report summary
        if: always()
        run: |
          echo "## ⚙️ Retail Intelligence Agent Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Agent:** Retail Intelligence Agent (SAP Retail/CAR)" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_outputs.outputs.has_outputs }}" == "true" ]; then
            echo "**Output Generated:** ✅" >> $GITHUB_STEP_SUMMARY
            echo "**Type:** ${{ steps.check_outputs.outputs.output_type }}" >> $GITHUB_STEP_SUMMARY
            echo "**Latest Output:** \`${{ steps.check_outputs.outputs.latest_asset }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Asset Information" >> $GITHUB_STEP_SUMMARY
            echo "- Category: SAP Retail / CAR" >> $GITHUB_STEP_SUMMARY
            echo "- Reusable: Yes" >> $GITHUB_STEP_SUMMARY
            echo "- Location: reports/retail/" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Output Generated:** ❌" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### KPI Targets" >> $GITHUB_STEP_SUMMARY
          echo "- ≥4 technical deliverables/month" >> $GITHUB_STEP_SUMMARY
          echo "- ≥1 project/quarter" >> $GITHUB_STEP_SUMMARY
          echo "- 80% asset reusability" >> $GITHUB_STEP_SUMMARY
